// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";
package v1;

// import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/api/annotations.proto";
// import "google/protobuf/empty.proto";
// import "google/protobuf/timestamp.proto";

option go_package = "./user";
service User {
  rpc UserLogin(LoginRequest) returns(LoginResponse) {
    option (google.api.http) = {
      post: "/v1/user/login"
    };
  };
  rpc UserRegister(RegisterRequest) returns(RegisterResponse){
    option (google.api.http) = {
      post: "/v1/user/register"
    };
  };
  rpc UserRegisterIntro(RegisterIntroRequest) returns(RegisterIntroResponse){
    option (google.api.http) = {
      post: "/v1/user/register/intro"
    };
  };
  rpc GetUserInfo(UserInfoRequest) returns(UserInfoResponse){
    option (google.api.http) = {
      get: "/v1/user/userinfo"
    };
  };
  rpc GetUsersInfo(UsersInfoRequest) returns(UsersInfoResponse){
    option (google.api.http) = {
      get: "/v1/user/usersinfo"
    };
  };
}

message Response {
    uint64 status_code = 1;
    string status_msg = 2;
}

// 用户登录
message LoginRequest {
  string user_name = 1;
  string password = 2;
}
message LoginResponse {
  uint64 status_code = 1;
  string status_msg = 2;
  uint64 uid = 3;
  string token = 4;
}

// 用户注册
message RegisterRequest {
    string user_name = 1;
    string password = 2;
}

message RegisterResponse {
  uint64 status_code = 1;
  string status_msg = 2;
  uint64 uid = 3;
  string token = 4;
}

// 用户注册详细信息
message RegisterIntroRequest {
    string user_intro = 1;
    bytes  sex = 2;	
    string area = 3;		  
	  string head_imageURL = 4;
    string token = 5;  
}

message RegisterIntroResponse {
   uint64 status_code = 1;
   string status_msg = 2;
}

// 用户信息
message UserInfoRequest {
  uint64 uid = 1;
  string token = 2;
}

message Users {
    uint64 uid = 1;
    string user_name = 2;
    uint64 follow_count = 3;
    uint64 follower_count = 4;
    bool is_follow = 5;
    string user_intro = 6;
    string head_imageURL = 7;  
}
  
message UserInfoResponse {
    uint64 status_code = 1;
    string status_msg = 2;
    Users user = 3;
}

// 搜索用户
message UsersInfoRequest {
  string users_keywords = 1;
  string token = 2;
}

message UsersInfoResponse {
  string status_code = 1;
  string status_msg = 2;
  repeated Users user_list = 3;
}

service Basic {
  rpc PublishImages(PublishImagesRequest) returns(Response){
      option (google.api.http) = {
        post: "/v1/basic/publish/images"
      };
    };
  rpc PublishVideos(PublishVideosRequest) returns(Response){
      option (google.api.http) = {
        post: "/v1/basic/publish/videos"
      };
    };
  rpc DeleteVideos(DeleteVideosRequest) returns(Response){
      option (google.api.http) = {
        delete: "/v1/basic/delete/Videos"
      };
    };
  rpc GetVideosList(VideosListRequest) returns(VideosListResponse){
      option (google.api.http) = {
        get: "/v1/basic/videos/list"
      };
    };
  
  rpc PublishComments(PublishCommentsRequest) returns(PublishCommentsResponse){
      option (google.api.http) = {
        post: "/v1/basic/publish/comments"
      };
    };
  rpc DeleteComments(DeleteCommentsRequest) returns(Response){
      option (google.api.http) = {
        delete: "/v1/basic/delete/comments"
      };
    };
  rpc GetCommentsList(CommentsListRequest) returns(CommentsListResponse){
      option (google.api.http) = {
        get: "/v1/basic/Comments/list"
      };
    };
  
  rpc FavoriteAction(FavoriteActionRequest) returns(Response){
      option (google.api.http) = {
        post: "/v1/basic/favorite/action"
      };
    };
  rpc GetFavoriteList(FavoriteListRequest) returns(FavoriteListResponse){
      option (google.api.http) = {
        get: "/v1/basic/favorite/list"
      };
    };
  rpc RelationAction(RelationActionRequest) returns(Response){
      option (google.api.http) = {
        post: "/v1/basic/relation/action"
      };
    };
  // 关注列表
  rpc GetRelationList(RelationListRequest) returns(RelationListResponse){
      option (google.api.http) = {
        get: "/v1/basic/relation/list"
      };
    };    
  // 粉丝列表  
  rpc GetRelationFollowerList(RelationFollowerListRequest) returns(RelationFollowerListResponse){
      option (google.api.http) = {
        get: "/v1/basic/relation/follower/list"
      };
    };  
  rpc CollectionsAction(CollectionsActionRequest) returns(Response) {
    option (google.api.http) = {
      post: "/v1/basic/collections/action"
    };
  }
  rpc GetCollectionsList(CollectionsListRequest) returns(CollectionsListResponse){
    option (google.api.http) = {
      get: "/v1/basic/relation/list"
    };
  };   
  
}

// 上传图片/封面/头像
message PublishImagesRequest {
    string image_url = 1;
    string token = 2;
}

// 上传视频
message PublishVideosRequest {
    string title = 1;
    string intro = 2;
    string address = 3;
    string cover_url = 4;
    string play_url = 5;
    uint64 uid = 6;
    uint64 publish_date = 7;
    uint64 video_type = 8;   //视频类型
    string token = 9;
}

// 删除视频
message DeleteVideosRequest {
    uint64 vid = 1;
    string token = 2;
}

// 获取视频列表
message VideosListRequest {
    uint64 uid = 1;
    string token = 2;
}

message Author {
  uint64 uid = 1;
  string name = 2;
  uint64 follow_count = 3;
  uint64 follower_count = 4;
  bool is_follow = 5;
}

message Videos {
  uint64 vid = 1;
  Author author = 2;
  string play_url = 3;
  string cover_url = 4;
  uint64 favorite_count = 5;
  uint64 comment_count = 6;
  bool is_favorite = 7;
  string title = 8;
  uint64 publish_date = 9;
}

message VideosListResponse {
  uint64 status_code = 1;
  string status_msg = 2;
  repeated Videos video_list = 3;
}

// 发布评论
message PublishCommentsRequest {
    uint64 vid = 1;
    uint64 parent_cid = 2;
    string comment_text = 3;
    uint64 publish_date = 4;
    string token = 5;
}

message Comment {
  uint64 cid = 1;
  Author author= 2;
  string content = 3;
  string create_date = 4;
}

message PublishCommentsResponse {
  uint64 status_code = 1;
  string status_msg = 2;
  Comment comment = 3;
}

// 删除评论
message DeleteCommentsRequest {
    uint64 cid = 1;
    uint64 vid = 2;
    uint64 parent_cid = 3;
    string token = 4;
}

// 获取评论列表
message CommentsListRequest {
    uint64 vid = 1;
    string token = 2;
}

message CommentsListResponse {
  uint64 status_code = 1;
  string status_msg = 2;
  repeated Comment comment_list = 3;
}

// 点赞操作
message FavoriteActionRequest {
   uint64 vid = 1;
   string action_type = 2;
   string token = 3;
}

// 喜欢列表
message FavoriteListRequest {
    uint64 uid = 1;
    string token = 2;
}

message FavoriteListResponse {
  string status_code = 1;
  string status_msg = 2;
  repeated Videos video_list = 3;
}

// 关注操作
message RelationActionRequest {
   uint64 uid = 1;
   string action_type = 2;
   string token = 3;
}

// 关注列表
message RelationListRequest {
   uint64 uid = 1;
   string token = 2;
}

message RelationListResponse {
  string status_code = 1;
  string status_msg = 2;
  repeated Users user_list = 3;
}

// 粉丝列表
message RelationFollowerListRequest {
  uint64 uid = 1;
  string token = 2;
}

message RelationFollowerListResponse {
  string status_code = 1;
  string status_msg = 2;
  repeated Users user_list = 3;
}

// 收藏操作
message CollectionsActionRequest {
  uint64 uid = 1;
  string action_type = 2;
  string token = 3;
}

// 收藏列表
message CollectionsListRequest {
  uint64 uid = 1;
  string token = 2;
}

message CollectionsListResponse {
  string status_code = 1;
  string status_msg = 2;
  repeated Videos video_list = 3;
}

service Video {
  rpc ClassifiedVideos(ClassifiedVideosRequest) returns(ClassifiedVideosResponse){
      option (google.api.http) = {
        get: "/v1/video/classified/videos"
      };
    };
  rpc GetVideosFeed(VideosFeedRequest) returns(VideosFeedResponse){
      option (google.api.http) = {
        get: "/v1/video/videos/feed"
      };
    };
  rpc GetVideosInfo(VideosInfoRequest) returns(VideosInfoResponse){
      option (google.api.http) = {
        get: "/v1/video/videosinfo"
      };
    };
}

// 按视频分类筛选
message ClassifiedVideosRequest {
  uint64 video_type = 1;
  string token = 2;
}

message ClassifiedVideosResponse {
  string status_code = 1;
  string status_msg = 2;
  repeated Videos video_list = 3;
}

// 视频流
message VideosFeedRequest {
  string last_time = 1;
  string token = 2;
}

message VideosFeedResponse {
  int64 status_code = 1;
  string status_msg = 2;
  int64 next_time = 3;
  repeated Videos video_list = 4;
}

// 搜索视频
message VideosInfoRequest {
  string videos_keywords = 1;
  string token = 2;
}

message VideosInfoResponse {
  string status_code = 1;
  string status_msg = 2;
  repeated Videos video_list = 3;
}


